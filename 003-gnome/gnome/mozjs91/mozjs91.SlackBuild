#!/bin/bash

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=mozjs91
SRCNAME=firefox
VERSION="91.13.0"
BUILD=${BUILD:-1}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

NUMJOBS="-j$(nproc --all)"

TMP=${TMP:-$MODULEPATH}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-$TMP/packages}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O3 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O3 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O3 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O3"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $SRCNAME-$VERSION ; rm -rf $SRCNAME-$(echo $VERSION | cut -f 1 -d e)

# Unpack this in a subdirectory to prevent changing permissions on /tmp:
rm -rf firefox-unpack
mkdir firefox-unpack
cd firefox-unpack
wget https://ftp.mozilla.org/pub/${SRCNAME}/releases/${VERSION}esr/source/${SRCNAME}-${VERSION}esr.source.tar.xz
tar xvf $SRCNAME-${VERSION}esr.source.tar.?z || exit 1
mv * ..
cd ..
rm -rf firefox-unpack
cd $SRCNAME-$(echo $VERSION | cut -f 1 -d e) || cd $SRCNAME-$VERSION || exit 1
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \+

# We need to use the incredibly ancient autoconf-2.13 for this
( cd $CWD/autoconf ; ./autoconf.build )
PATH=$TMP/autoconf-tmp/usr/bin:$PATH

# Patches from Fedora:
zcat $CWD/patches/fix-soname.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/copy-headers.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/tests-increase-timeout.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/icu_sources_data.py-Decouple-from-Mozilla-build-system.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/icu_sources_data-Write-command-output-to-our-stderr.patch.gz | patch -p1 --verbose || exit 1

zcat $CWD/patches/emitter.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/tests-Use-native-TemporaryDirectory.patch.gz | patch -p1 --verbose || exit 1 

zcat $CWD/patches/init_patch.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/remove-sloppy-m4-detection-from-bundled-autoconf.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/0001-Python-Build-Use-r-instead-of-rU-file-read-modes.patch.gz | patch -p1 --verbose || exit 1

zcat $CWD/patches/spidermonkey_checks_disable.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/patches/0001-Skip-failing-tests-on-ppc64-and-s390x.patch.gz | patch -p1 --verbose || exit 1

# Remove bundled zlib directory and use system version:
rm -rf modules/zlib

cd js/src

# We need to do this because patches above touch configure.in:
autoconf-2.13

export RUSTFLAGS="-C embed-bitcode"

CFLAGS+="$SLKCFLAGS -fno-delete-null-pointer-checks -fno-strict-aliasing -fno-tree-vrp " \
CXXFLAGS+="$SLKCFLAGS -fno-delete-null-pointer-checks -fno-strict-aliasing -fno-tree-vrp " \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --without-system-icu \
  --with-system-zlib \
  --disable-tests \
  --disable-strip \
  --with-intl-api \
  --enable-readline \
  --enable-optimize \
  --enable-pie \
  --enable-shared-js \
  --disable-jemalloc \
  --build=$ARCH-slackware-linux \

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# No need for the huge static library:
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libjs_static.*

# Don't ship -config:
rm -f $PKG/usr/bin/js*-config

# Rename shared library to have a proper soname:
mv $PKG/usr/lib${LIBDIRSUFFIX}/libmozjs-91.so $PKG/usr/lib${LIBDIRSUFFIX}/libmozjs-91.so.0.0.0
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  ln -sf libmozjs-91.so.0.0.0 libmozjs-91.so.0
  ln -sf libmozjs-91.so.0 libmozjs-91.so
)

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp ../../README.txt README.html $PKG/usr/doc/$PKGNAM-$VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
